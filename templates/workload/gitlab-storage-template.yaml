AWSTemplateFormatVersion: 2010-09-09
Description: Deploys Gitlab S3 buckets (qs-1rpegts5o)

Metadata:
  cfn-lint:
    config:
      ignore_checks:
        - W9002
        - W9003
        - W9004
        - E0002

Parameters:
  SSEAlgorithm:
    Type: String
    Default: AES256
    AllowedValues: [ 'AES256', 'aws:kms' ]
  KMSKeyID:
    Type: String
    Default: ''
  EnvironmentName:
    Type: String 
  DeleteBucketContentsFunctionArn:
    Type: String
  DeleteBucketContentsRoleName:
    Type: String

Conditions:
  UseKMS: !Equals [!Ref KMSKeyID, 'aws:kms']

Resources:

  ArtifactsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: !Ref SSEAlgorithm
              KMSMasterKeyID: !If [UseKMS, !Ref KMSKeyID, !Ref 'AWS::NoValue']
  DeleteArtifactsBucketContents:
    Type: Custom::DeleteBucketContents
    DependsOn: DeleteBucketContentsRolePolicy
    Properties:
      ServiceToken: !Ref DeleteBucketContentsFunctionArn
      Bucket: !Ref ArtifactsBucket

  LfsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: !Ref SSEAlgorithm
              KMSMasterKeyID: !If [UseKMS, !Ref KMSKeyID, !Ref 'AWS::NoValue']
  DeleteLfsBucketContents:
    Type: Custom::DeleteBucketContents
    DependsOn: DeleteBucketContentsRolePolicy
    Properties:
      ServiceToken: !Ref DeleteBucketContentsFunctionArn
      Bucket: !Ref LfsBucket

  UploadsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: !Ref SSEAlgorithm
              KMSMasterKeyID: !If [UseKMS, !Ref KMSKeyID, !Ref 'AWS::NoValue']
  DeleteUploadsBucketContents:
    Type: Custom::DeleteBucketContents
    DependsOn: DeleteBucketContentsRolePolicy
    Properties:
      ServiceToken: !Ref DeleteBucketContentsFunctionArn
      Bucket: !Ref UploadsBucket

  PackagesBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: !Ref SSEAlgorithm
              KMSMasterKeyID: !If [UseKMS, !Ref KMSKeyID, !Ref 'AWS::NoValue']
  DeletePackagesBucketContents:
    Type: Custom::DeleteBucketContents
    DependsOn: DeleteBucketContentsRolePolicy
    Properties:
      ServiceToken: !Ref DeleteBucketContentsFunctionArn
      Bucket: !Ref PackagesBucket

  TerraformBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: !Ref SSEAlgorithm
              KMSMasterKeyID: !If [UseKMS, !Ref KMSKeyID, !Ref 'AWS::NoValue']
  DeleteTerraformBucketContents:
    Type: Custom::DeleteBucketContents
    DependsOn: DeleteBucketContentsRolePolicy
    Properties:
      ServiceToken: !Ref DeleteBucketContentsFunctionArn
      Bucket: !Ref TerraformBucket

  PseudonymizerBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: !Ref SSEAlgorithm
              KMSMasterKeyID: !If [UseKMS, !Ref KMSKeyID, !Ref 'AWS::NoValue']
  DeletePseudonymizerBucketContents:
    Type: Custom::DeleteBucketContents
    DependsOn: DeleteBucketContentsRolePolicy
    Properties:
      ServiceToken: !Ref DeleteBucketContentsFunctionArn
      Bucket: !Ref PseudonymizerBucket

  RegistryBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: !Ref SSEAlgorithm
              KMSMasterKeyID: !If [UseKMS, !Ref KMSKeyID, !Ref 'AWS::NoValue']
  DeleteRegistryBucketContents:
    Type: Custom::DeleteBucketContents
    DependsOn: DeleteBucketContentsRolePolicy
    Properties:
      ServiceToken: !Ref DeleteBucketContentsFunctionArn
      Bucket: !Ref RegistryBucket

  BackupBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: !Ref SSEAlgorithm
              KMSMasterKeyID: !If [UseKMS, !Ref KMSKeyID, !Ref 'AWS::NoValue']
  DeleteBackupBucketContents:
    Type: Custom::DeleteBucketContents
    DependsOn: DeleteBucketContentsRolePolicy
    Properties:
      ServiceToken: !Ref DeleteBucketContentsFunctionArn
      Bucket: !Ref BackupBucket

  BackupTempBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: !Ref SSEAlgorithm
              KMSMasterKeyID: !If [UseKMS, !Ref KMSKeyID, !Ref 'AWS::NoValue']
  DeleteBackupTempBucketContents:
    Type: Custom::DeleteBucketContents
    DependsOn: DeleteBucketContentsRolePolicy
    Properties:
      ServiceToken: !Ref DeleteBucketContentsFunctionArn
      Bucket: !Ref BackupTempBucket

  PagesBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: !Ref SSEAlgorithm
              KMSMasterKeyID: !If [UseKMS, !Ref KMSKeyID, !Ref 'AWS::NoValue']
  DeletePagesBucketContents:
    Type: Custom::DeleteBucketContents
    DependsOn: DeleteBucketContentsRolePolicy
    Properties:
      ServiceToken: !Ref DeleteBucketContentsFunctionArn
      Bucket: !Ref PagesBucket

  # IAM resources

  DeleteBucketContentsRolePolicy:
    Type: AWS::IAM::Policy
    Properties:
      Roles:
        - !Ref DeleteBucketContentsRoleName
      PolicyName: !Sub '${EnvironmentName}-delete-bucket-contents'
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action: 's3:ListBucketVersions'
            Resource:
              - !Sub "arn:${AWS::Partition}:s3:::${ArtifactsBucket}"
              - !Sub "arn:${AWS::Partition}:s3:::${LfsBucket}"
              - !Sub "arn:${AWS::Partition}:s3:::${UploadsBucket}"
              - !Sub "arn:${AWS::Partition}:s3:::${PackagesBucket}"
              - !Sub "arn:${AWS::Partition}:s3:::${TerraformBucket}"
              - !Sub "arn:${AWS::Partition}:s3:::${PseudonymizerBucket}"
              - !Sub "arn:${AWS::Partition}:s3:::${RegistryBucket}"
              - !Sub "arn:${AWS::Partition}:s3:::${BackupBucket}"
              - !Sub "arn:${AWS::Partition}:s3:::${BackupTempBucket}"
              - !Sub "arn:${AWS::Partition}:s3:::${PagesBucket}"
          - Effect: Allow
            Action: 
              - 's3:DeleteObject'
              - 's3:DeleteObjectVersion'
            Resource:
              - !Sub "arn:${AWS::Partition}:s3:::${ArtifactsBucket}/*"
              - !Sub "arn:${AWS::Partition}:s3:::${LfsBucket}/*"
              - !Sub "arn:${AWS::Partition}:s3:::${UploadsBucket}/*"
              - !Sub "arn:${AWS::Partition}:s3:::${PackagesBucket}/*"
              - !Sub "arn:${AWS::Partition}:s3:::${TerraformBucket}/*"
              - !Sub "arn:${AWS::Partition}:s3:::${PseudonymizerBucket}/*"
              - !Sub "arn:${AWS::Partition}:s3:::${RegistryBucket}/*"
              - !Sub "arn:${AWS::Partition}:s3:::${BackupBucket}/*"
              - !Sub "arn:${AWS::Partition}:s3:::${BackupTempBucket}/*"
              - !Sub "arn:${AWS::Partition}:s3:::${PagesBucket}/*"

  ObjectStorageGroup:
    Type: AWS::IAM::Group
    Properties:
      Path: /quickstart/gitlab/
      Policies:
      - PolicyName: objectStorageAccess
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          # Common object storage permissions
          - Effect: Allow
            Action:
              - s3:ListBucket
            Resource: 
              - !Sub "arn:${AWS::Partition}:s3:::${ArtifactsBucket}"
              - !Sub "arn:${AWS::Partition}:s3:::${LfsBucket}"
              - !Sub "arn:${AWS::Partition}:s3:::${UploadsBucket}"
              - !Sub "arn:${AWS::Partition}:s3:::${PackagesBucket}"
              - !Sub "arn:${AWS::Partition}:s3:::${TerraformBucket}"
              - !Sub "arn:${AWS::Partition}:s3:::${PseudonymizerBucket}"
              - !Sub "arn:${AWS::Partition}:s3:::${RegistryBucket}"
              - !Sub "arn:${AWS::Partition}:s3:::${BackupBucket}"
              - !Sub "arn:${AWS::Partition}:s3:::${BackupTempBucket}"
          - Effect: Allow
            Action:
              - s3:*Object
            Resource: 
              - !Sub "arn:${AWS::Partition}:s3:::${ArtifactsBucket}/*"
              - !Sub "arn:${AWS::Partition}:s3:::${LfsBucket}/*"
              - !Sub "arn:${AWS::Partition}:s3:::${UploadsBucket}/*"
              - !Sub "arn:${AWS::Partition}:s3:::${PackagesBucket}/*"
              - !Sub "arn:${AWS::Partition}:s3:::${TerraformBucket}/*"
              - !Sub "arn:${AWS::Partition}:s3:::${PseudonymizerBucket}/*"
              - !Sub "arn:${AWS::Partition}:s3:::${RegistryBucket}/*"
              - !Sub "arn:${AWS::Partition}:s3:::${BackupBucket}/*"
              - !Sub "arn:${AWS::Partition}:s3:::${BackupTempBucket}/*"
          # Additional registry & backup permissions below
          - Effect: Allow
            Action:
              - s3:GetBucketLocation
              - s3:ListBucketMultipartUploads
            Resource: 
              - !Sub "arn:${AWS::Partition}:s3:::${RegistryBucket}"
              - !Sub "arn:${AWS::Partition}:s3:::${BackupBucket}"
              - !Sub "arn:${AWS::Partition}:s3:::${BackupTempBucket}"
          - Effect: Allow
            Action:
              - s3:ListMultipartUploadParts
              - s3:AbortMultipartUpload
            Resource: 
              - !Sub "arn:${AWS::Partition}:s3:::${RegistryBucket}/*"
              - !Sub "arn:${AWS::Partition}:s3:::${BackupBucket}/*"
              - !Sub "arn:${AWS::Partition}:s3:::${BackupTempBucket}/*"

  GitLabObjectStorageUser:
    Type: AWS::IAM::User
    Properties:
      Path: /quickstart/gitlab/
      Groups: 
        - !Ref ObjectStorageGroup

  GitLabObjectStorageKeys:
    Type: AWS::IAM::AccessKey
    Properties:
      Status: Active
      UserName:
        Ref: GitLabObjectStorageUser

  GitLabObjectStorageKeysSecret:
    Type: 'AWS::SecretsManager::Secret'
    Properties:
      Name: !Sub '/quickstart/gitlab/${EnvironmentName}/storage/credentials' 
      Description: "GitLab Object Storage access keys"
      SecretString: !Sub '{"accessKeyId": "${GitLabObjectStorageKeys}", "secretAccessKey": "${GitLabObjectStorageKeys.SecretAccessKey}"}'

  ArtifactsBucketParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Type: String
      Name: !Sub '/quickstart/gitlab/${EnvironmentName}/storage/buckets/artifacts'
      Value: !Ref ArtifactsBucket 

  LfsBucketBucketParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Type: String
      Name: !Sub '/quickstart/gitlab/${EnvironmentName}/storage/buckets/lfs'
      Value: !Ref LfsBucket 

  UploadsBucketParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Type: String
      Name: !Sub '/quickstart/gitlab/${EnvironmentName}/storage/buckets/uploads'
      Value: !Ref UploadsBucket

  PackagesBucketParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Type: String
      Name: !Sub '/quickstart/gitlab/${EnvironmentName}/storage/buckets/packages'
      Value: !Ref PackagesBucket

  TerraformBucketParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Type: String
      Name: !Sub '/quickstart/gitlab/${EnvironmentName}/storage/buckets/terraform'
      Value: !Ref TerraformBucket

  PseudonymizerBucketParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Type: String
      Name: !Sub '/quickstart/gitlab/${EnvironmentName}/storage/buckets/pseudonymizer'
      Value: !Ref PseudonymizerBucket

  RegistryBucketParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Type: String
      Name: !Sub '/quickstart/gitlab/${EnvironmentName}/storage/buckets/registry'
      Value: !Ref RegistryBucket

  BackupBucketParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Type: String
      Name: !Sub '/quickstart/gitlab/${EnvironmentName}/storage/buckets/backup'
      Value: !Ref BackupBucket

  BackupTmpBucketParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Type: String
      Name: !Sub '/quickstart/gitlab/${EnvironmentName}/storage/buckets/backup-tmp'
      Value: !Ref BackupTempBucket

  PagesBucketParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Type: String
      Name: !Sub '/quickstart/gitlab/${EnvironmentName}/storage/buckets/pages'
      Value: !Ref PagesBucket

Outputs:
  ArtifactsBucket: 
    Value: !Ref ArtifactsBucket
  LfsBucket: 
    Value: !Ref LfsBucket
  UploadsBucket: 
    Value: !Ref UploadsBucket
  PackagesBucket: 
    Value: !Ref PackagesBucket
  TerraformBucket: 
    Value: !Ref TerraformBucket
  PseudonymizerBucket: 
    Value: !Ref PseudonymizerBucket
  RegistryBucket:
    Value: !Ref RegistryBucket
  BackupBucket: 
    Value: !Ref BackupBucket
  BackupTempBucket: 
    Value: !Ref BackupTempBucket
  PagesBucket: 
    Value: !Ref PagesBucket

  CredentialsSecretName:
    Value: !Ref GitLabObjectStorageKeysSecret